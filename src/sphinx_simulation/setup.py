from setuptools import find_packages, setup

package_name = 'my_python_package'

setup(
    name=package_name,
    version='0.0.0',
    packages=find_packages(exclude=['test']),
    data_files=[
        ('share/ament_index/resource_index/packages',
            ['resource/' + package_name]),
        ('share/' + package_name, ['package.xml']),
    ],
    install_requires=['setuptools'],
    zip_safe=True,
    maintainer='labadmin',
    maintainer_email='labadmin@todo.todo',
    description='TODO: Package description',
    license='TODO: License declaration',
    tests_require=['pytest'],
    entry_points={
        'console_scripts': [
            'simulation_control = my_python_package.simulation_control:main',
            'manual_control = my_python_package.manual_control:main',
            'get_current_state = my_python_package.get_current_state:main',
            'sphinx = my_python_package.sphinx:main',
            'mpc_control = my_python_package.mpc_control:main',
            'mpc_control_pytorch = my_python_package.mpc_control_pytorch:main',
            'mpc_control_pytorch_gpu = my_python_package.mpc_control_pytorch_gpu:main',
            'collect_data_x = my_python_package.collect_data_x:main',
            'collect_data_y = my_python_package.collect_data_y:main',
            'collect_data_z = my_python_package.collect_data_z:main',
            'collect_data_yaw = my_python_package.collect_data_yaw:main',
            'calculate_state_function = my_python_package.calculate_state_function:main',
            'test_state_function = my_python_package.test_state_function:main',
            'check = my_python_package.check:main',
            'calculate_state_function_neural = my_python_package.calculate_state_function_neural:main',
            'see_a_b = my_python_package.see_a_b:main',
            'calculate_state_function_square = my_python_package.calculate_state_function_square:main',
            'test_state_function_square = my_python_package.test_state_function_square:main',
            'collect_data_random = my_python_package.collect_data_random:main',
            'test_state_function_square_random = my_python_package.test_state_function_square_random:main',
            'test_state_function_random = my_python_package.test_state_function_random:main',
            'calculate_angle2speed = my_python_package.calculate_angle2speed:main',
            'calculate_pcmd2angle = my_python_package.calculate_pcmd2angle:main',
            'mpc_control_simple = my_python_package.mpc_control_simple:main',
            'pid_control = my_python_package.pid_control:main',
            'pid_control_yaw = my_python_package.pid_control_yaw:main',
            'mpc_casadi = my_python_package.mpc_casadi:main',
            'pid_move2point = my_python_package.pid_move2point:main',
            'mpc_move2point = my_python_package.mpc_move2point:main',
            'landing_ball_on_vehicle = my_python_package.landing_ball_on_vehicle:main',
        ],
    },
)
